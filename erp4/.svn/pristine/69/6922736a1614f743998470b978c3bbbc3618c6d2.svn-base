package com.sxt.sys.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.sxt.sys.service.WorkFlowService;
import com.sxt.sys.utils.DataGridView;
import com.sxt.sys.vo.WorkFlowVo;

/**
 * 流程管理
 * 
 * @author LJH
 *
 */
@Controller
@RequestMapping("workFlow")
public class WorkFlowController {
	@Autowired
	private WorkFlowService workFlowService;

	/**
	 * 跳转到流程管理的页面
	 */
	@RequestMapping("toWorkFlowManager")
	public String toWorkFlowManager() {
		return "system/workFlow/workFlowManager";
	}

	/**
	 * 加载所有有部署信息
	 * 
	 */
	@RequestMapping("loadAllProcessDeployment")
	@ResponseBody
	public DataGridView loadAllProcessDeployment(WorkFlowVo flowVo) {
		return this.workFlowService.loadAllProcessDeployment(flowVo);
	}

	/**
	 * 加载所有的流程定义信息
	 */
	@RequestMapping("loadAllProcessDef")
	@ResponseBody
	public DataGridView loadAllProcessDef(WorkFlowVo flowVo) {
		return this.workFlowService.loadAllProcessDef(flowVo);
	}
	
	/**
	 * 跳转到部署流程的页面
	 */
	@RequestMapping("toAddDeployment")
	public String toAddDeployment(WorkFlowVo flowVo) {
		return "system/workFlow/workFlowAdd";
	}
	
	/**
	 * 上传部署
	 */
	@RequestMapping("addDeployment")
	@ResponseBody
	public Map<String,Object> addDeployment(MultipartFile mf,WorkFlowVo flowVo){
		Map<String,Object> map=new HashMap<String, Object>();
		String msg="部署成功";
		try {
			this.workFlowService.addDelpoyment(mf.getInputStream(),flowVo.getDeploymentName());
		} catch (Exception e) {
			e.printStackTrace();
			msg="部署失败";
		}
		map.put("msg", msg);
		return map;
	}

	/**
	 * 删除流程部署
	 */
	@RequestMapping("deleteDeployment")
	@ResponseBody
	public Map<String,Object> deleteDeployment(WorkFlowVo flowVo){
		Map<String,Object> map=new HashMap<String, Object>();
		String msg="删除成功";
		try {
			this.workFlowService.deleteDeployment(flowVo.getDeploymentId());
		} catch (Exception e) {
			e.printStackTrace();
			msg="删除失败";
		}
		map.put("msg", msg);
		return map;
	}
}
